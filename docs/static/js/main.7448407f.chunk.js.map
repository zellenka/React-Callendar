{"version":3,"sources":["App.js","index.js"],"names":["calendar","events","App","props","createCalendar","Calendar","refs","plugins","interactionPlugin","dayGridPlugin","timeGridPlugin","listPlugin","defaultView","selectable","selectHelper","editable","header","left","center","right","eventLimit","buttonText","today","prev","next","state","eventClick","event","setState","modalChange","modalAdd","eventId","id","eventTitle","title","description","extendedProps","eventDescription","dateClick","info","element","dateStr","coordinates","top","jsEvent","pageY","dayEl","offsetHeight","offsetLeft","offsetWidth","render","changeView","newView","currentDate","view","addNewEvent","e","preventDefault","newEvent","start","startDate","replace","concat","addEvent","allDay","changeEvent","newEvents","map","prop","key","getEventById","remove","undefined","deleteEvent","filter","onchangeHandler","target","name","value","closeHandler","this","className","data-calendar-view","onClick","ref","toggle","change","save","coored","placeholder","type","onChange","rows","cols","React","Component","ModalAdd","ReactDOM","createPortal","style","onSubmit","class","document","querySelector","getElementById"],"mappings":"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","file":"static/js/main.7448407f.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './App.css';\r\nimport '@fullcalendar/core/main.css';\r\nimport '@fullcalendar/daygrid/main.css';\r\nimport '@fullcalendar/timegrid/main.css';\r\nimport { Calendar } from \"@fullcalendar/core\";\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport timeGridPlugin from '@fullcalendar/timegrid';\r\nimport interactionPlugin from '@fullcalendar/interaction';\r\nimport listPlugin from '@fullcalendar/list';\r\n\r\nlet calendar;\r\n\r\nconst events = [\r\n  // {\r\n  //   id: 1,\r\n  //   title: \"Call with Dave\",\r\n  //   start: new Date(),\r\n  //   allDay: true,\r\n  //   className: \"bg-red\",\r\n  //   description:\r\n  //     \"Nullam id dolor id nibh ultricies vehicula ut id elit. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.\"\r\n  // },\r\n  // {\r\n  //   id: 2,\r\n  //   title: \"Call with Dave2\",\r\n  //   start: new Date(),\r\n  //   allDay: true,\r\n  //   className: \"bg-red\",\r\n  //   description:\r\n  //     \"Nullam id dolor id nibh ultricies vehicula ut id elit.\"\r\n  // },\r\n]\r\nclass App extends React.Component{\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      events: events,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.createCalendar();\r\n  }\r\n  createCalendar = () => {\r\n    calendar = new Calendar(this.refs.calendar, {\r\n      plugins: [interactionPlugin, dayGridPlugin, timeGridPlugin, listPlugin],\r\n      defaultView: \"dayGridMonth\",\r\n      selectable: true,\r\n      selectHelper: false,\r\n      editable: true,\r\n      header: {\r\n        left: \"today,prev,next\",\r\n        center: \"title\",\r\n        right: \"month, agendaWeek\",\r\n        eventLimit: true\r\n      },\r\n      buttonText:{\r\n        today: 'Today',\r\n        prev: 'Back',\r\n        next: 'Next',\r\n      },\r\n      events: this.state.events,\r\n      // Edit calendar event action\r\n      eventClick: ({ event }) => {\r\n        this.setState({\r\n          modalChange: true,\r\n          modalAdd: false,\r\n          eventId: event.id,\r\n          eventTitle: event.title,\r\n          description: event.extendedProps.eventDescription,\r\n          event: event\r\n        });\r\n        \r\n      },\r\n      dateClick: (info) => {\r\n        this.setState({\r\n          modalAdd: true,\r\n          modalChange: false,\r\n          element: info.dateStr,\r\n          coordinates: {\r\n            top: info.jsEvent.pageY - info.dayEl.offsetHeight/2,\r\n            left: info.dayEl.offsetLeft + info.dayEl.offsetWidth/2\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    calendar.render();\r\n\r\n  };\r\n  changeView = newView => {\r\n    calendar.changeView(newView);\r\n    this.setState({\r\n      currentDate: calendar.view.title\r\n    });\r\n  };\r\n  addNewEvent = (e) => {\r\n    e.preventDefault()\r\n\r\n    const newEvent = {\r\n      title: this.state.eventTitle,\r\n      description: this.state.eventDescription,\r\n      start: this.state.startDate,\r\n      id:this.state.eventTitle.replace(/ /g, '')\r\n    }\r\n\r\n    this.setState(()=>({\r\n      events: this.state.events.concat(newEvent),\r\n      modalAdd: false\r\n    }));\r\n\r\n    calendar.addEvent({\r\n      title: newEvent.title,\r\n      start: newEvent.start,\r\n      id: newEvent.id,\r\n      eventDescription: newEvent.description,\r\n      allDay: false\r\n    });\r\n  };\r\n  changeEvent = (e) => {\r\n\r\n    e.preventDefault()\r\n\r\n    var newEvents = this.state.events.map((prop, key) => {\r\n\r\n      if (prop.id === this.state.eventId) {\r\n\r\n        calendar.getEventById(this.state.eventId).remove();\r\n        \r\n        this.state.event.remove();\r\n\r\n        calendar.addEvent({\r\n          title: this.state.eventTitle,\r\n          start: this.state.startDate,\r\n          id: this.state.eventTitle.replace(/ /g, ''),\r\n          eventDescription :this.state.description,\r\n          allDay: false,\r\n        });\r\n        return {\r\n          title: this.state.eventTitle,\r\n          start: this.state.startDate,\r\n          id: this.state.eventTitle.replace(/ /g, ''),\r\n          description :this.state.description,\r\n          allDay: false,\r\n        }\r\n      } else {\r\n        return prop;\r\n      }\r\n    });\r\n\r\n    this.setState({\r\n      events: newEvents,\r\n      modalChange: false,\r\n      eventTitle: undefined,\r\n      eventDescription: undefined,\r\n      eventId: undefined,\r\n      event: undefined\r\n    })\r\n  };\r\n  deleteEvent = (e) => {\r\n    e.preventDefault()\r\n    var newEvents = this.state.events.filter(\r\n      prop => prop.id !== this.state.eventId\r\n    );\r\n    this.state.event.remove();\r\n    this.setState({\r\n      modalChange: false,\r\n      events: newEvents,\r\n      eventTitle: undefined,\r\n      eventDescription: undefined,\r\n      eventId: undefined,\r\n      event: undefined\r\n    });\r\n  };\r\n  onchangeHandler = (e) => {\r\n    this.setState({[e.target.name]: e.target.value})\r\n  }\r\n  closeHandler = () => {\r\n    this.setState({\r\n      modalAdd: false,\r\n      modalChange: false\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div className='demo-app'>\r\n       <div className=\"calendar-block_top\">\r\n         <div className=\"calendar-head\">Calendar View</div>\r\n       <div className=\"buttons-wrapper\">\r\n                  <button\r\n                    className=\"fc-button fc-button-primary\"\r\n                    data-calendar-view=\"month\"\r\n                    onClick={() => this.changeView(\"dayGridMonth\")}\r\n                    \r\n                  >\r\n                    Month\r\n                  </button>\r\n                  <button\r\n                    className=\"fc-button fc-button-primary\"\r\n                    data-calendar-view=\"basicWeek\"\r\n                    onClick={() => this.changeView(\"dayGridWeek\")}\r\n                  >\r\n                    Week\r\n                  </button>\r\n                  <button\r\n                    className=\"fc-button fc-button-primary\"\r\n                    data-calendar-view=\"basicDay\"\r\n                    onClick={() => this.changeView(\"dayGridDay\")}\r\n                  >\r\n                    Day\r\n                  </button>\r\n                  <button\r\n                    className=\"fc-button fc-button-primary\"\r\n                    data-calendar-view=\"basicDay\"\r\n                    onClick={() => this.changeView(\"list\")}\r\n                  >\r\n                    AgendaDay\r\n                  </button>\r\n                </div>\r\n       </div>\r\n         <div className=\"calendar\" ref=\"calendar\" />\r\n\r\n        {\r\n          this.state.modalAdd ?\r\n            <ModalAdd\r\n            toggle={() => this.setState({ modalAdd: false })}\r\n            change={this.onchangeHandler }\r\n            save={this.addNewEvent}\r\n            coored={this.state.coordinates}\r\n            />\r\n          : null\r\n        }\r\n        {\r\n          this.state.modalChange ?\r\n            <div className=\"modal-body\">\r\n            <form className=\"block-form\">\r\n                <label className=\"form-control-label\">Event title</label>\r\n                <input\r\n                  placeholder=\"Event Title\"\r\n                  type=\"text\"\r\n                  name=\"eventTitle\"\r\n                  value={this.state.eventTitle}\r\n                  onChange={this.onchangeHandler}\r\n                />\r\n                <input\r\n                  placeholder=\"start\"\r\n                  type=\"datetime-local\"\r\n                  name=\"startDate\"\r\n                  value={this.state.startDate}\r\n                  onChange={this.onchangeHandler}\r\n                />\r\n                <textarea rows=\"5\" cols=\"20\" \r\n                name=\"description\" \r\n                onChange={this.onchangeHandler} \r\n                value={this.state.description}\r\n                />\r\n                  \r\n                <div className=\"buttons-form\">\r\n                  <button onClick={this.deleteEvent} className=\"button-form buttons__cancel\">Discart</button>\r\n                  <button onClick={this.changeEvent} className=\"button-form \">Edit</button>  \r\n                </div>\r\n            </form>\r\n            <button className=\"modal-close\" onClick={() => this.setState({ modalChange: false })}>X</button>\r\n          </div>\r\n          : null\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n  \r\n}\r\n\r\nconst ModalAdd = ({ toggle, change, save, coored }) => {\r\n    return ReactDOM.createPortal(\r\n      <div className=\"modal-body\" style={{top: coored.top + 'px', left: coored.left + 'px'}}>\r\n        <form className=\"block-form\" onSubmit={save}>\r\n          <label className=\"form-control-label\">Event title</label>\r\n          <input\r\n            placeholder=\"Event Title\"\r\n            type=\"text\"\r\n            name=\"eventTitle\"\r\n            onChange={change}\r\n          />\r\n          <input\r\n            placeholder=\"start\"\r\n            type=\"datetime-local\"\r\n            name=\"startDate\"\r\n            onChange={change}\r\n          />\r\n          <textarea rows=\"5\" cols=\"20\" name=\"eventDescription\" onChange={change}></textarea>\r\n          <div className=\"buttons-form\">\r\n            <button onClick={toggle} className=\"button-form buttons__cancel\">Close</button>\r\n            <button className=\"button-form buttons__save\">Save</button>\r\n          </div>\r\n      </form>\r\n      <button class=\"modal-close\" onClick={toggle}>X</button>\r\n    </div>,\r\n     document.querySelector('.fc-view'))\r\n\r\n}\r\n\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}